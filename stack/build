#!/usr/bin/env python2
# -*- python -*-
# Copyright 2013 Johan Rydberg.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import yaml
import os
import subprocess
import sys


class DefaultLanguage(object):

    def detect(self, dir):
        """Try to detect if the language."""
        return False

    def install(self, spec, dir):
        for key in ('before_install', 'install'):
            rc = self._run(spec, self._command(spec, key))
            if rc:
                sys.exit("RC")
        return rc
    
    def script(self, spec, dir):
        for key in ('before_script', 'script'):
            rc = self._run(spec, self._command(spec, key))
        result_key = 'after_failure' if rc else 'after_success'
        self._run(spec, self._command(spec, result_key))
        self._run(spec, self._command(spec, 'after_script'))
        return rc

    def _run(self, spec, commands):
        for command in commands:
            sys.stdout.write("[INFO] execute '{0}'\n".format(command))
            rc = subprocess.call(command, shell=True)
            if rc:
                sys.stdout.write("[INFO] result {0}\n".format(rc))
                return rc

    def _command(self, spec, key):
        cmds = spec.get(key, [])
        if type(cmds) != list:
            cmds = [cmds]
        return cmds


class PythonLanguage(DefaultLanguage):

    def detect(self, dir):
        return os.path.exists(os.path.join(
            dir, 'requirements.txt'))

    def script(self, spec, dir):
        if not 'script' in spec:
            sys.exit("'python' requires a 'script' command") 
        return DefaultLanguage.script(self, spec, dir)


LANGUAGES = {
    "python": PythonLanguage(),
    "default": DefaultLanguage(),
    }


def detect(spec, dir):
    """Detect language."""
    lang_name = spec.get('language')
    if lang_name:
        if lang_name not in LANGUAGES:
            sys.exit("no such language")

        return LANGUAGES.get(lang_name)

    for name, lang in LANGUAGES.items():
        if lang.detect(dir):
            return lang

    sys.exit("cannot detect language")


def main(spec_filename='.travis-ci.yml'):
    with open(spec_filename) as fp:
        spec = yaml.load(fp)
    dir = os.getcwd()
    lang = detect(spec, dir)
    lang.install(spec, dir)
    lang.script(spec, dir)


if __name__ == '__main__':
    main()
